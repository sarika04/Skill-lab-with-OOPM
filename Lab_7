#include <iostream>
using namespace std;
 
class Fish; // Forward declaration of class Foo in order for example to compile.
class Beer {
  private:
      int a = 0;
  public:
      void show(Beer& x, Fish& y);
      friend void show(Beer& x, Fish& y); // declaration of global friend
};
 
class Fish {
  private:
      int b = 6;
  public: 
      friend void show(Beer& x, Fish& y); // declaration of global friend
      friend void Beer::show(Beer& x, Fish& y); // declaration of friend from other class 
};
 
// Definition of a member function of Bar; this member is a friend of Foo
void Beer::show(Beer& x, Fish& y) {
  cout << "Show via function member of Bar" << endl;
  cout << "Beer::a = " << x.a << endl;
  cout << "Fish::b = " << y.b << endl;
}
 
// Friend for Bar and Foo, definition of global function
void show(Beer& x, Fish& y) {
  cout << "Show via global function" << endl;
  cout << "Beer::a = " << x.a << endl;
  cout << "Fish::b = " << y.b << endl;
}
 
int main() {
   Beer a;
   Fish b;
 
   show(a,b);
   a.show(a,b);
}



#include <iostream>
using namespace std;
class XYZ {
private:
   char ch='Z';
   int num = 11;
public:
   
   friend class ABC;
};
class ABC {
public:
   void disp(XYZ obj){
      cout<<obj.ch<<endl;
      cout<<obj.num<<endl;
   }
};
int main() {
   ABC obj;
   XYZ obj2;
   obj.disp(obj2);
   return 0;
}
